AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation template for creating a Application Load Balancer"
Resources:
  FargateAlb:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: FargateAlb
      Subnets:
        - subnet-6b723c0c
        - subnet-4fbbf013
        - subnet-7e7a2f50
      Type: application
      SecurityGroups:
        - !GetAtt FargateAlbSG.GroupId
  FargateTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Name: ImpexTargetGroup
      VpcId: vpc-9d55b7f5
      Protocol: HTTP
      Port: 80
      HealthCheckPath: /actuator/
      TargetType: ip
  Listener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref FargateTargetGroup
          Type: forward
      LoadBalancerArn: !Ref FargateAlb
      Port: 80
      Protocol: HTTP
  FargateAlbSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: SG for the Fargate ALB
      GroupName: FargateAlbSG
      SecurityGroupIngress:
        - CidrIpv6: 0.0.0.0/0
          FromPort: 5000
          ToPort: 5000
          IpProtocol: TCP
          Description: 'Inbound rule for App traffic'
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: TCP
          Description: 'Inbound rule for IPv4 traffic'

  Alb2FargateContainers:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: SG for traffic between ALB and containers
      GroupName: Alb2FargateContainers
      SecurityGroupIngress:
        - IpProtocol: -1
          SourceSecurityGroupId: !GetAtt FargateAlbSG.GroupId
          Description: 'Inbound rule for all traffic'
 